% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/vcr.R
\name{use_cassette}
\alias{eject_cassette}
\alias{insert_cassette}
\alias{use_cassette}
\title{Use a cassette to record an HTTP call}
\usage{
use_cassette(name, record = "once", match_requests_on = NULL,
  re_record_interval = NULL, tag = NULL, tags = NULL,
  update_content_length_header = FALSE, decode_compressed_response = FALSE,
  allow_playback_repeats = FALSE, allow_unused_http_interactions = TRUE,
  exclusive = FALSE, serialize_with = "yaml",
  persist_with = "file_system", preserve_exact_body_bytes = TRUE,
  block = FALSE)

insert_cassette(name, record = "once", match_requests_on = NULL,
  re_record_interval = NULL, tag = NULL, tags = NULL,
  update_content_length_header = FALSE, decode_compressed_response = FALSE,
  allow_playback_repeats = FALSE, allow_unused_http_interactions = TRUE,
  exclusive = FALSE, serialize_with = "yaml",
  persist_with = "file_system", preserve_exact_body_bytes = TRUE)

eject_cassette(cassettes, options = list())
}
\arguments{
\item{name}{The name of the cassette. vcr will sanitize this to ensure it is a valid file name.}

\item{record}{The record mode. One of "all", "none", "new_episodes", "once". See Details.}

\item{match_requests_on}{List of request matchers
to use to determine what recorded HTTP interaction to replay. Defaults to
("method", "uri"). The built-in matchers are "method", "uri", "host", "path", "headers"
and "body". You can also pass the name of a registered custom request matcher or
any object that responds to #call.}

\item{re_record_interval}{(integer) When given, the
cassette will be re-recorded at the given interval, in seconds.}

\item{tag}{(character) Used to apply tagged `before_record`
and `before_playback` hooks to the cassette.}

\item{tags}{Used to apply multiple tags to
a cassette so that tagged `before_record` and `before_playback` hooks
will apply to the cassette.}

\item{update_content_length_header}{(logical) Whether or
not to overwrite the Content-Length header of the responses to
match the length of the response body. Defaults to false.}

\item{decode_compressed_response}{(logical) Whether or
not to decode compressed responses before recording the cassette.
This makes the cassette more human readable. Defaults to false.}

\item{allow_playback_repeats}{(logical) Whether or not to
allow a single HTTP interaction to be played back multiple times.
Defaults to false.}

\item{allow_unused_http_interactions}{(logical) If set to
false, an error will be raised if a cassette is ejected before all
previously recorded HTTP interactions have been used.
Defaults to true. Note that when an error has already occurred
(as indicated by the `$!` variable) unused interactions will be
allowed so that we don't silence the original error (which is almost
certainly more interesting/important).}

\item{exclusive}{(logical) Whether or not to use only this
cassette and to completely ignore any cassettes in the cassettes stack.
Default: FALSE.}

\item{serialize_with}{(character) Which serializer to use.
Valid values are "yaml" (default), "syck", "psych", "json" or any registered
custom serializer.}

\item{persist_with}{(character) Which cassette persister to
use. Defaults: "file_system". You can also register and use a
custom persister.}

\item{preserve_exact_body_bytes}{(logical) Whether or not
to base64 encode the bytes of the requests and responses for this cassette
when serializing it. See also `VCR::Configuration#preserve_exact_body_bytes`.}

\item{skip_no_unused_interactions_assertion}{(logical) If \code{TRUE}, this will skip
the "no unused HTTP interactions" assertion enabled by the
\code{allow_unused_http_interactions=FALSE} cassette option. This is intended for use
when your test has had an error, but your test framework has already handled it.}
}
\value{
The ejected cassette if there was one
}
\description{
Use a cassette to record an HTTP call

Eject cassette
}
\details{
\itemize{
 \item \code{use_cassette} Initialize a cassett. Returns the inserted cassette.
 \item \code{insert_cassette} Internally used within \code{use_cassette}.
 \item \code{eject_cassette} ejects the current cassette. The cassette will no longer be used.
 In addition, any newly recorded HTTP interactions will be written to disk.
}

Options for \code{record} parameter:
\itemize{
 \item all - Record every HTTP interactions; do not play any back.
 \item none - Do not record any HTTP interactions; play them back.
 \item new_episodes - Playback previously recorded HTTP interactions and record new ones.
 \item once - Record the HTTP interactions if the cassette has not already been recorded;
 otherwise, playback the HTTP interactions.
}
}
\note{
If you use this method you \emph{must} call \code{eject_cassette()} when you
 are done.
}
\examples{
\dontrun{
x <- cassettes()[[1]]
(cas <- as.cassette(x))
as.cassette(cas)
as.cassette(cassettes()[[1]])
as.cassette(cassettes()[[2]])
as.cassette("foobar")

insert_cassette(name = "foobar")

use_cassette("foobar", {
   GET("http://google.com")
})
}
}

